{
    "key.1": "Apple",
    "key.2": "Britain",
    "key.3": "This key has reference - {\"one\":\"One nigga\",\"other\":\"Other nigga\"}",
    "key.4": {
        "one": "One nigga",
        "other": "Other nigga"
    },
    "key.test.1": "test 1",
    "key.test.2": "test 2",
    "key.lock.1": "a",
    "key.lock.2": "swag",
    "key.lock.3": "keyboard 1ss",
    "develop.key": "Updated from github v2 edited",
    "develop.github.new.key": "Updated from github. v2 [edited by oleg]",
    "key.5": "",
    "key.6": "Tags:\n<i><test\/> test 1<\/i><test\/> \n<b><test\/> test 2 <\/b><test\/> \n<asdas\/><test\/>\n\nHTML:\n<html><test\/>\n<body><test\/>\n<h1><test\/>My First Heading<\/h1><test\/>\n<p><test\/>My first paragraph.<\/p><test\/>\n<\/body><test\/>\n<\/html><test\/>\n\n",
    "key.7": "Tags:\n<i><test\/> test 1<\/i><test\/> \n<b><test\/> test 2 <\/b><test\/> \n<asdas\/><test\/>\n\nHTML:\n<html><test\/>\n<body><test\/>\n<h1><test\/>My First Heading<\/h1><test\/>\n<p><test\/>My first paragraph.<\/p><test\/>\n<\/body><test\/>\n<\/html><test\/>\n\nPlaceholders:\n%d\n%f\n%s\n%i\n%e\n%u\n%o\n%x\n%c\n%b\n%zyuzyzuasdsa%\n",
    "key.8": "Tags:\n<i><test\/> test 1<\/i><test\/> \n<b><test\/> test 2 <\/b><test\/> \n<asdas\/><tesM0t0r0lat\/>\n\nHTML:\n<html><test\/>\n<body><test\/>\n<h1><test\/>My First Heading<\/h1><test\/>\n<p><test\/>My first paragraph.<\/p><test\/>\n<\/body><test\/>\n<\/html><test\/>\n\nPlaceholders:\n%d\n%f\n%s\n%i\n%e\n%u\n%o\n%x\n%c\n%b\n%zyuzyzuasdsa%\n\nLokalise placeholders (universal):\n%s, %1$s, %s  – String.\n%d, %1$d, %d  – Integer.\n%f, %.2f, %1$.2f, %.2f  – Float.\n[%key:key_name%]\n%%  – Will be automatically exported as %%  for printf and iOS placeholder formats if the string contains at least one placeholder (will be exported as %  otherwise).\n[VOID]  – Exported as empty string, but counts as translated in the system.\n[TRUE], [FALSE] - boolean\n\nPlaceholder formats:\nExample string – My name is %s. I have %.2f dollars. \n\nprintf\nPrintf-style placeholders – My name is %s. I have %.2f dollars. \n%i is converted to %d. Other variants remain unchanged.\n\nios\niOS-style placeholders – My name is %@. I have %.2f dollars. \n%s is converted to %@ and %i is converted to %li (%li is used for it's support for both 32 and 64 bit integers). Other variants remain unchanged.\n\nicu\nICU Message Format placeholders – My name is {name}. I have {0} dollars. \nPlaceholders that have a name, will be exported as {name}, other placeholders will be exported as {n} where n is the positional index of the placeholder. When used in ICU plurals, the placeholder with positional index of 1 will be exported as #.\n\nnet\n.NET placeholder format – My name is {0}. I have {0:0.00} dollars. \n\nsymfony\nSymfony placeholder format – My name is %name%. I have %placeholder_1% dollars. \nPlaceholders that don't have a name, will be exported as placeholder_n where n is the positional index of the placeholder.",
    "key.10": "<b> <\/b>",
    "key.9_copy": "Tags:\n<i><test\/> test 1<\/i><test\/> \n<b><test\/> test 2 <\/b><test\/> \n<asdas\/><test\/>\n\nHTML:\n<html><test\/>\n<body><test\/>\n<h1><test\/>My First Heading<\/h1><test\/>\n<p><test\/>My first paragraph.<\/p><test\/>\n<\/body><test\/>\n<\/html><test\/>\n\nPlaceholders:\n%d\n%f\n%s\n%i\n%e\n%u\n%o\n%x\n%c\n%b\n%zyuzyzuasdsa%\n\nLokalise placeholders (universal):\n%s, %1$s, %s  – String.\n%d, %1$d, %d  – Integer.\n%f, %.2f, %1$.2f, %.2f  – Float.\n[%key:key_name%]\n%%  – Will be automatically exported as %%  for printf and iOS placeholder formats if the string contains at least one placeholder (will be exported as %  otherwise).\n[VOID]  – Exported as empty string, but counts as translated in the system.\n[TRUE], [FALSE] - boolean\n\nPlaceholder formats:\nExample string – My name is %s. I have %.2f dollars. \n\nprintf\nPrintf-style placeholders – My name is %s. I have %.2f dollars. \n%i is converted to %d. Other variants remain unchanged.\n\nios\niOS-style placeholders – My name is %@. I have %.2f dollars. \n%s is converted to %@ and %i is converted to %li (%li is used for it's support for both 32 and 64 bit integers). Other variants remain unchanged.\n\nicu\nICU Message Format placeholders – My name is {name}. I have {0} dollars. \nPlaceholders that have a name, will be exported as {name}, other placeholders will be exported as {n} where n is the positional index of the placeholder. When used in ICU plurals, the placeholder with positional index of 1 will be exported as #.\n\nnet\n.NET placeholder format – My name is {0}. I have {0:0.00} dollars. \n\nsymfony\nSymfony placeholder format – My name is %name%. I have %placeholder_1% dollars. \nPlaceholders that don't have a name, will be exported as placeholder_n where n is the positional index of the placeholder.",
    "key.9_copy_copy": "Tags:\n<i><test\/> test 1<\/i><test\/> \n<b><test\/> test 2 <\/b><test\/> \n<asdas\/><test\/>\n\nHTML:\n<html><test\/>\n<body><test\/>\n<h1><test\/>My First Heading<\/h1><test\/>\n<p><test\/>My first paragraph.<\/p><test\/>\n<\/body><test\/>\n<\/html><test\/>\n\nPlaceholders:\n%d\n%f\n%s\n%i\n%e\n%u\n%o\n%x\n%c\n%b\n%zyuzyzuasdsa%\n\nLokalise placeholders (universal):\n%s, %1$s, %s  – String.\n%d, %1$d, %d  – Integer.\n%f, %.2f, %1$.2f, %.2f  – Float.\n[%key:key_name%]\n%%  – Will be automatically exported as %%  for printf and iOS placeholder formats if the string contains at least one placeholder (will be exported as %  otherwise).\n[VOID]  – Exported as empty string, but counts as translated in the system.\n[TRUE], [FALSE] - boolean\n\nPlaceholder formats:\nExample string – My name is %s. I have %.2f dollars. \n\nprintf\nPrintf-style placeholders – My name is %s. I have %.2f dollars. \n%i is converted to %d. Other variants remain unchanged.\n\nios\niOS-style placeholders – My name is %@. I have %.2f dollars. \n%s is converted to %@ and %i is converted to %li (%li is used for it's support for both 32 and 64 bit integers). Other variants remain unchanged.\n\nicu\nICU Message Format placeholders – My name is {name}. I have {0} dollars. \nPlaceholders that have a name, will be exported as {name}, other placeholders will be exported as {n} where n is the positional index of the placeholder. When used in ICU plurals, the placeholder with positional index of 1 will be exported as #.\n\nnet\n.NET placeholder format – My name is {0}. I have {0:0.00} dollars. \n\nsymfony\nSymfony placeholder format – My name is %name%. I have %placeholder_1% dollars. \nPlaceholders that don't have a name, will be exported as placeholder_n where n is the positional index of the placeholder.",
    "key.9_copy_copy_copy": "Tags:\n<i><test\/> test 1<\/i><test\/> \n<b><test\/> test 2 <\/b><test\/> \n<asdas\/><test\/>\n\nHTML:\n<html><test\/>\n<body><test\/>\n<h1><test\/>My First Heading<\/h1><test\/>\n<p><test\/>My first paragraph.<\/p><test\/>\n<\/body><test\/>\n<\/html><test\/>\n\nPlaceholders:\n%d\n%f\n%s\n%i\n%e\n%u\n%o\n%x\n%c\n%b\n%zyuzyzuasdsa%\n\nLokalise placeholders (universal):\n%s, %1$s, %s  – String.\n%d, %1$d, %d  – Integer.\n%f, %.2f, %1$.2f, %.2f  – Float.\n[%key:key_name%]\n%%  – Will be automatically exported as %%  for printf and iOS placeholder formats if the string contains at least one placeholder (will be exported as %  otherwise).\n[VOID]  – Exported as empty string, but counts as translated in the system.\n[TRUE], [FALSE] - boolean\n\nPlaceholder formats:\nExample string – My name is %s. I have %.2f dollars. \n\nprintf\nPrintf-style placeholders – My name is %s. I have %.2f dollars. \n%i is converted to %d. Other variants remain unchanged.\n\nios\niOS-style placeholders – My name is %@. I have %.2f dollars. \n%s is converted to %@ and %i is converted to %li (%li is used for it's support for both 32 and 64 bit integers). Other variants remain unchanged.\n\nicu\nICU Message Format placeholders – My name is {name}. I have {0} dollars. \nPlaceholders that have a name, will be exported as {name}, other placeholders will be exported as {n} where n is the positional index of the placeholder. When used in ICU plurals, the placeholder with positional index of 1 will be exported as #.\n\nnet\n.NET placeholder format – My name is {0}. I have {0:0.00} dollars. \n\nsymfony\nSymfony placeholder format – My name is %name%. I have %placeholder_1% dollars. \nPlaceholders that don't have a name, will be exported as placeholder_n where n is the positional index of the placeholder.",
    "key.9_copy_copy_copy_copy_test": "Tags:\n<i><test\/> test 1<\/i><test\/> \n<b><test\/> test 2 <\/b><test\/> \n<asdas\/><test\/>\n\nHTML:\n<html><test\/>\n<body><test\/>\n<h1><test\/>My First Heading<\/h1><test\/>\n<p><test\/>My first paragraph.<\/p><test\/>\n<\/body><test\/>\n<\/html><test\/>\n\nPlaceholders:\n%d\n%f\n%s\n%i\n%e\n%u\n%o\n%x\n%c\n%b\n%zyuzyzuasdsa%\n\nLokalise placeholders (universal):\n%s, %1$s, %s  – String.\n%d, %1$d, %d  – Integer.\n%f, %.2f, %1$.2f, %.2f  – Float.\n[%key:key_name%]\n%%  – Will be automatically exported as %%  for printf and iOS placeholder formats if the string contains at least one placeholder (will be exported as %  otherwise).\n[VOID]  – Exported as empty string, but counts as translated in the system.\n[TRUE], [FALSE] - boolean\n\nPlaceholder formats:\nExample string – My name is %s. I have %.2f dollars. \n\nprintf\nPrintf-style placeholders – My name is %s. I have %.2f dollars. \n%i is converted to %d. Other variants remain unchanged.\n\nios\niOS-style placeholders – My name is %@. I have %.2f dollars. \n%s is converted to %@ and %i is converted to %li (%li is used for it's support for both 32 and 64 bit integers). Other variants remain unchanged.\n\nicu\nICU Message Format placeholders – My name is {name}. I have {0} dollars. \nPlaceholders that have a name, will be exported as {name}, other placeholders will be exported as {n} where n is the positional index of the placeholder. When used in ICU plurals, the placeholder with positional index of 1 will be exported as #.\n\nnet\n.NET placeholder format – My name is {0}. I have {0:0.00} dollars. \n\nsymfony\nSymfony placeholder format – My name is %name%. I have %placeholder_1% dollars. \nPlaceholders that don't have a name, will be exported as placeholder_n where n is the positional index of the placeholder.",
    "glossary.1": "test",
    "h7j9rgiy8t5o:2ghmZMkX31PSySIZ35VXFO:title": "",
    "h7j9rgiy8t5o:32bB50s3Me8Q3BsYaAKWTm:title": "",
    "h7j9rgiy8t5o:32bB50s3Me8Q3BsYaAKWTm:description": "",
    "h7j9rgiy8t5o:3IfIvJiwP3loEdGwzrA7o7:title": ""
}